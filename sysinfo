#!/data/data/com.termux/files/usr/bin/bash

#color codes
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
RESET=$(tput sgr0)

#text formatting
BOLD=$(tput bold)
UNDERLINE=$(tput smul)
NO_UNDERLINE=$(tput rmul)

#function to print texts
PRINT() {
    local style=$1
    local color=$2
    local message=$3
    echo -e "${style}${color}${message}${RESET}"
}

#spinner function
spinner() {
    local message=$1
    local pid=$2
    local delay=0.1
    local colors=("31;5")
    local spinstr='⣾⣽⣻⢿⡿⣟⣯⣷'
    local i=0
    tput civis
    while ps -p $pid > /dev/null; do
        local color=${colors[i++ % ${#colors[@]}]}
        printf "\e[${color}m%s\e[0m" "${spinstr:i++%${#spinstr}:1}"
        sleep $delay
        printf "\b"
    done
    tput cnorm
    printf "   \b\b\b"
}


#main function
function main() {
    echo -e ${BOLD} ${BLUE}
    figlet -t -c -f term "SYSTEM INFORMATION"
    echo -e ${RESET}
    echo -e ${BOLD} ${YELLOW}
    figlet -c -t -f term "Github: https://github.com/Aj-Seven"
    echo -e ${RESET}
    echo -e ${BOLD} ${CYAN}
    figlet -t -c -f digital "Author: @Aj-Seven"
    echo -e ${RESET}
    PRINT $UNDERLINE "Select the options below:"
    PRINT $BOLD $WHITE"
        01) System Overview
        02) Disk Fetch
        03) CPU Info
        04) Memory Fetch
        05) System BaseInfo
        06) Network Stats
        07) Internet Speed
        08) Battery Stats
        00) Exit\n"
    read -n1 opt
    case $opt in
        1) androidinfo ;;
        2) disk ;;
        3) cpu ;;
        4) memusage ;;
        5) sysbaseinfo ;;
        6) netstats ;;
        7) network_speed ;;
        8) battery;;
        0)  PRINT $RED "Exiting...:)"
            sleep 0.6s;
            exit 0;
            ;;
        *)
            PRINT $CYAN "Error Selection. Try Again..."
            ;;
    esac
}

#memory usage function
memusage() {
    local mem_info=$(free -m | awk '/Mem/ {print}')
    local TOTAL_MEM=$(echo "$mem_info" | awk '{print $2}')
    local AVAILABLE_MEM=$(echo "$mem_info" | awk '{print $7}')
    local TOTAL_USED_MEM=$(( TOTAL_MEM - AVAILABLE_MEM ))
    local BUFFCACHE_MEM=$(echo "$mem_info" | awk '{print $6}')
    local FREE_BUFF_MEM=$(echo "$mem_info" | awk '{print $4}')
    local PERCENT_USED_MEM=$(free -m | awk 'NR==2{printf "%.2f%%\n", $3*100/$2 }')
    PRINT $BOLD $CYAN "Total Memory\t\t:$WHITE $TOTAL_MEM MB"
    PRINT $BOLD $CYAN "Used Memory\t\t:$WHITE $TOTAL_USED_MEM MB"
    PRINT $BOLD $CYAN "Available Memory\t:$WHITE $AVAILABLE_MEM MB"
    PRINT $BOLD $CYAN "Buffer+Cache Memory\t:$WHITE $BUFFCACHE_MEM MB"
    PRINT $BOLD $CYAN "Free Buff+Cache Memory\t:$WHITE $FREE_BUFF_MEM MB"
    PRINT $BOLD $CYAN "Percentage Usage\t:$WHITE $PERCENT_USED_MEM"
}

#CPU Information
cpu() {
    command cpufetch --color 239,90,45:210,200,200:0,0,0:100,200,45:0,200,200
    cpu_usage=$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {printf "%.2f%%\n",sum}')
    PRINT $BOLD $RED "CPU Load: "$cpu_usage
}

#Disk Usage
disk() {
    echo -e ${BOLD} ${BLUE}
    df -h | awk '$NF=="/storage/emulated"{printf "Disk Usage: %d/%dGB (%s)\n", $3,$2,$5}'
    echo -e ${RESET}

}

#info about android software
androidinfo() {
    PRINT $BOLD"
     $CYAN Brand:           $WHITE $(getprop ro.product.brand)
     $CYAN Manufacturer:    $WHITE $(getprop ro.product.manufacturer)
     $CYAN Device Model:    $WHITE $(getprop ro.product.model)
     $CYAN Android Version: $WHITE $(getprop ro.build.version.release)
     $CYAN SDK Version:     $WHITE $(getprop ro.build.version.sdk)
     $CYAN Build Number:    $WHITE $(getprop ro.build.display.id)
     $CYAN Build Date:      $WHITE $(date -d @$(getprop ro.build.date.utc))
     $CYAN Baseband:        $WHITE $(getprop gsm.version.baseband)
     $CYAN Build Type:      $WHITE $(getprop ro.build.type)
     $CYAN Language:        $WHITE $(getprop persist.sys.locale)
     $CYAN Timezone:        $WHITE $(getprop persist.sys.timezone)"
}

#wifi info
wifi_info() {
    local data=$(termux-wifi-connectioninfo)
    local status=$(jq -r '.supplicant_state' <<< "$data")
    local name=$(jq -r '.ssid' <<< "$data")
    local hidden_state=$(jq -r '.ssid_hidden' <<< "$data")
    local freq=$(jq -r '.frequency_mhz' <<< "$data")
    local ip=$(jq -r '.ip' <<< "$data")
    local mac_address=$(jq -r '.mac_address' <<< "$data")
    local max_speed=$(jq -r '.link_speed_mbps' <<< "$data")

    if [[ $status != "COMPLETED" ]]; then
        PRINT $YELLOW "WiFi information not available."
        return 1
    fi
    hidden_state=$( [[ "$hidden_state" == "true" ]] && echo "Yes" || echo "No" )

    PRINT $BOLD"
     $UNDERLINE $MAGENTA WiFi Info: ${RESET} $BOLD
     $CYAN WiFi Name:    $WHITE $name
     $CYAN Hidden State: $WHITE $hidden_state
     $CYAN Frequency:    $WHITE $freq MHz
     $CYAN IP Address:   $WHITE $ip
     $CYAN MAC Address:  $WHITE $mac_address
     $CYAN Max Speed:    $WHITE $max_speed mbps"
}

#cellular info
cellular_info() {
    local data=$(termux-telephony-deviceinfo)
    local network=$(jq -r '.network_operator_name' <<< "$data")
    local type=$(jq -r '.network_type' <<< "$data")
    local roaming=$(jq -r '.network_roaming' <<< "$data")
    local data_enabled=$(jq -r '.data_enabled' <<< "$data")
    local connection=$(jq -r '.data_state' <<< "$data")
    local signal=$(jq -r '.signal_strength' <<< "$data")
    local sim=$(jq -r '.sim_operator_name' <<< "$data")
    local country=$(jq -r '.sim_country_iso' <<< "$data")
    local state=$(jq -r '.sim_state' <<< "$data")
    local dualsim=$(jq -r '.phone_count' <<< "$data")
    local phone=$(jq -r '.phone_type' <<< "$data")

    if [[ $state == "absent" ]]; then
        echo "Cellular Network Info Not Available.."
        return 1
    fi

    dualsim=$( [[ $dualsim -eq 2 ]] && echo "Yes" || echo "No" )
    roaming=$( [[ $roaming == "true" ]] && echo "Enabled" || echo "Disabled" )
    data_enabled=$( [[ $data_enabled == "true" ]] && echo "Enabled" || echo "Disabled" )

    PRINT $BOLD"
     $UNDERLINE $MAGENTA Cellular Info: ${RESET} $BOLD
     $CYAN Network Operator:   $WHITE $network
     $CYAN Network Type:       $WHITE $type
     $CYAN Roaming:            $WHITE $roaming
     $CYAN Data Enabled:       $WHITE $data_enabled
     $CYAN Data Connection:    $WHITE $connection
     $CYAN Signal Strength:    $WHITE $signal
     $CYAN SIM Operator:       $WHITE $sim
     $CYAN SIM Country ISO:    $WHITE $country
     $CYAN SIM State:          $WHITE $state
     $CYAN Dual SIM Support:   $WHITE $dualsim
     $CYAN Phone Network Type: $WHITE $phone"
}

#Network Information
netstats () {
    HOST_NAME=$(hostname)
    EXTERNALIP=$(curl -4 ifconfig.me 2>/dev/null)
    INTERNALIP=$(hostname -i)
    local STATUS=$(
    if ping -q -c2 google.com &>/dev/null; then
        PRINT $BOLD $GREEN "You are Up :)"
    else
        PRINT $BOLD $RED "You are Down :("
    fi)
    PRINT $BOLD"
     $UNDERLINE $MAGENTA Basic Info: ${RESET} $BOLD
     $CYAN Host Name:         $WHITE $HOST_NAME
     $CYAN External IP:       $WHITE $EXTERNALIP
     $CYAN Internal IP:       $WHITE $INTERNALIP
     $CYAN Connection Status: $WHITE $STATUS"
    cellular_info
    wifi_info
}


#System Base Information like kernel uptime
sysbaseinfo() {
    kn=$(uname -s)
    kv=$(uname -v)
    kr=$(uname -r)
    ka=$(uname -m)
    ko=$(uname -o)
    uptime=$(uptime -p)
    suptime=$(uptime -s)
    PRINT $BOLD $CYAN "Operating System: $WHITE  $ko"
    PRINT $BOLD $CYAN "Kernel Name: $WHITE       $kn"
    PRINT $BOLD $CYAN "Kernel Version: $WHITE    $kr"
    PRINT $BOLD $CYAN "Kernel Release: $WHITE    $kv"
    PRINT $BOLD $CYAN "System Architect: $WHITE  $ka"
    PRINT $BOLD $CYAN "System Uptime: $WHITE     $uptime"
    PRINT $BOLD $CYAN "System Since Boot: $WHITE $suptime"
}


#Network Speed Checker
network_speed() {
    PRINT $UNDERLINE $YELLOW "Running SpeedTest, Please Wait..."
    tmpfile=$(mktemp)
    speedtest-go | grep -E "Download|Upload|Latency" > "$tmpfile" & 2>/dev/null

    local pid=$!

    spinner "Fetching innternet speed..." $pid

    wait $pid

    download=$(grep -oP "Download:\s+\K[0-9.]+" "$tmpfile")
    upload=$(grep -oP "Upload:\s+\K[0-9.]+" "$tmpfile")
    latency=$(grep -oP "Latency:\s+\K[0-9.]+" "$tmpfile")

    PRINT $BOLD"
     $CYAN Download speed: $WHITE $download Mbps
     $CYAN Upload speed:   $WHITE $upload Mbps
     $CYAN Latency:        $WHITE $latency ms"

    rm "$tmpfile"
}

battery() {
    termux-battery-status | jtbl -r | awk '{ print "\033[0;95m" $1 "\033[0;0m" "\n\t" "\033[0;96m" $2 "\033[0;0m" }'
    PRINT $YELLOW "Press 'l' for live battery test"
    PRINT $YELLOW "Press 'q' or 'ctrl+c' to quit"
    read -N 1 key
    if [[ $key = "l" ]]; then
        while true; do
            termux-battery-status | jtbl -r | awk '{ print "\033[0;95m" $1 "\033[0;0m" "\n\t" "\033[0;96m" $2 "\033[0;0m" }'
    read -N 1 -t 0.50 key
    if [[ $key = "q" ]] || [[ $key = "ctrl+c" ]]; then
        exit
    fi
        done
    fi
}

version() {
    PRINT $BOLD"Android System Information
     $WHITE Version: 2.0"
}

#Help Function
_help() {
    PRINT $WHITE"$BOLD
Usage:$RESET <commands>.

A tool for displaying Android System Information
$BOLD
Flags: $RESET
     -h, --help    Show this help.
     -v, --version Print the version number
$BOLD
Commands: $RESET
     android    Display Android System Overview.
     disk       Show disk usage.
     cpu        View CPU Information.
     memory     Display memory usage.
     sysbinfo   Provide system information.
     netstats   Show network statistics.
     speed      Measure internet Speed.
     battery    Display battery statistics.
$BOLD
Example: $RESET
     sysinfo disk
     "
}

netstat_help() {
    PRINT $WHITE"$BOLD
Usage:$RESET sysinfo netstats [<options> ].
$BOLD
Flags: $RESET
     --wifi     - Show Wi-Fi connection Information if available.
     --cellular - Show cellular connection Information if available.
     --help     - Shows this Help.
$BOLD
Example: $RESET
     sysinfo netstats --wifi
     "
}

if [ $# -eq 0 ]; then
       command clear
    while true; do
        main
    done
fi

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -v|--version) version;;
        android) androidinfo;;
        disk) disk;;
        cpu) cpu;;
        memory) memusage;;
        sysbinfo) sysbaseinfo;;
        netstats)
            case "$2$3" in
                "--wifi--cellular" | "--cellular--wifi")
                    wifi_info
                    cellular_info
                    ;;
                "--wifi")
                    wifi_info
                    ;;
                "--cellular")
                    cellular_info
                    ;;
                "--help")
                    netstat_help
                    ;;
                *)
                    if [ -z "$2" ] && [ -z "$3" ]; then
                        netstats
                    else
                        netstat_help

                        PRINT $RED $BOLD"Error:$RESET Unknown Option '$2$3'"
                    fi
            esac
            break
            ;;
        speed) network_speed;;
        battery) battery;;
        -h|--help) _help ;;
        *) _help
            PRINT $RED $BOLD"Error:$RESET Unknown Option '$1'"
            exit 1;;
    esac
    shift
done
