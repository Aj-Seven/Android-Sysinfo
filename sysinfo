#!/data/data/com.termux/files/usr/bin/bash

#color codes
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
RESET=$(tput sgr0)

#text formatting
BOLD=$(tput bold)
UNDERLINE=$(tput smul)
NO_UNDERLINE=$(tput rmul)

#function to print texts
PRINT() {
    local style=$1
    local color=$2
    local message=$3
    echo -e "${style}${color}${message}${RESET}"
}


#main function
function main() {
    echo -e ${BOLD} ${BLUE}
    figlet -t -c -f term "SYSTEM INFORMATION"
    echo -e ${RESET}
    echo -e ${BOLD} ${YELLOW}
    figlet -c -t -f term "Github: https://github.com/Aj-Seven"
    echo -e ${RESET}
    echo -e ${BOLD} ${CYAN}
    figlet -t -c -f digital "Author: @Aj-Seven"
    echo -e ${RESET}
    PRINT $UNDERLINE "Select the options below:"
    PRINT $BOLD $WHITE"
        01) OS Info
        02) Disk Fetch
        03) CPU Info
        04) Memory Fetch
        05) System BaseInfo
        06) Network Stats
        07) Internet Speed
        08) Battery Stats
        00) Exit\n"
    read -n1 opt
    case $opt in
        1) OS ;;
        2) disk ;;
        3) cpu ;;
        4) memusage ;;
        5) sysbaseinfo ;;
        6) netstats ;;
        7) ispeed ;;
        8) battery;;
        0)  PRINT $RED "Exiting...:)"
            sleep 0.6s;
            exit 0;
            ;;
        *)
            PRINT $CYAN "Error Selection. Try Again..."
            ;;
    esac
}

#memory usage function
memusage() {
    BUFFCACHE_MEM=$(free -m | awk '/Mem/ {print $6}')
    FREE_BUFF_MEM=$(free -m | awk '/Mem/ {print $4}')
    AVAILABLE_MEM=$(free -m | awk '/Mem/ {print $7}')
    TOTAL_MEM=$(free -m | awk '/Mem/ {print $2}')
    TOTAL_USED_MEM=$(( $TOTAL_MEM - $AVAILABLE_MEM ))
    PERCENT_USED_MEM=$(free -m | awk 'NR==2{printf "%.2f%%\n", $3*100/$2 }')
    PRINT $BOLD $CYAN "Total Memory\t\t:$WHITE $TOTAL_MEM MB"
    PRINT $BOLD $CYAN "Used Memory\t\t:$WHITE $TOTAL_USED_MEM MB"
    PRINT $BOLD $CYAN "Available Memory\t:$WHITE $AVAILABLE_MEM MB"
    PRINT $BOLD $CYAN "Buffer+Cache Memory\t:$WHITE $BUFFCACHE_MEM MB"
    PRINT $BOLD $CYAN "Free Buff+Cache Memory\t:$WHITE $FREE_BUFF_MEM MB"
    PRINT $BOLD $CYAN "Percentage Usage\t:$WHITE $PERCENT_USED_MEM"
}

#CPU Information
cpu() {
        command cpufetch --color 239,90,45:210,200,200:0,0,0:100,200,45:0,200,200
        echo -e ${RED}
        top -bn1 | grep load | awk '{printf "CPU Load: %.2f\n", $(NF-2)}'
        echo -e ${RESET}
}

#Disk Usage
disk() {
    echo -e ${BOLD} ${BLUE}
    df -h | awk '$NF=="/storage/emulated"{printf "Disk Usage: %d/%dGB (%s)\n", $3,$2,$5}'
    echo -e ${RESET}

}

#OS info By Neofetch
OS() {
        command neofetch --colors 3 4 5 2 1 | pv -qL 350
}


#Network Information
netstats () {
    hostname=$(hostname)
    PRINT $BOLD $CYAN "Host Name: $WHITE  $hostname"
    externalip=$(curl -s ifconfig.me)
    PRINT $BOLD $CYAN "External IP: $WHITE $externalip"
    internalip=$(hostname -i)
    PRINT $BOLD $CYAN "Internal IP: $WHITE $internalip"
    if ping -q -c2 google.com &>/dev/null;
    then
        PRINT $BOLD $CYAN "Network Connection: $GREEN You are Up :)"

    else
        PRINT $BOLD $CYAN "Network Connection: $RED Your are Down :("
    fi
}


#System Base Information like kernel uptime
sysbaseinfo() {
    kn=$(uname -s)
    kv=$(uname -v)
    kr=$(uname -r)
    ka=$(uname -m)
    ko=$(uname -o)
    uptime=$(uptime -p)
    suptime=$(uptime -s)
    PRINT $BOLD $CYAN "Operating System: $WHITE  $ko"
    PRINT $BOLD $CYAN "Kernel Name: $WHITE       $kn"
    PRINT $BOLD $CYAN "Kernel Version: $WHITE    $kr"
    PRINT $BOLD $CYAN "Kernel Release: $WHITE    $kv"
    PRINT $BOLD $CYAN "System Architect: $WHITE  $ka"
    PRINT $BOLD $CYAN "System Uptime: $WHITE     $uptime"
    PRINT $BOLD $CYAN "System Since Boot: $WHITE $suptime"
}


#Network Speed Checker
ispeed() {
        PRINT $GREEN "Plzz wait... This will take few minutes."
        echo -e ${CYAN}
        command speedtest-go
        echo -e ${RESET}
}

battery() {
    termux-battery-status | jtbl -r | awk '{ print "\033[0;95m" $1 "\033[0;0m" "\n\t" "\033[0;96m" $2 "\033[0;0m" }'
    PRINT $YELLOW "Press 'l' for live battery test"
    PRINT $YELLOW "Press 'q' or 'ctrl+c' to quit"
    read -N 1 key
    if [[ $key = "l" ]]; then
        while true; do
            termux-battery-status | jtbl -r | awk '{ print "\033[0;95m" $1 "\033[0;0m" "\n\t" "\033[0;96m" $2 "\033[0;0m" }'
    read -N 1 -t 0.50 key
    if [[ $key = "q" ]] || [[ $key = "ctrl+c" ]]; then
        exit
    fi
        done
    fi
}

#Help Function while how to use the Argument
#Based running the Script
_help() {
    PRINT $BOLD $WHITE "Usage: Options.
    --os|os - OS Info By Neofetch.
    --disk|D - Shows the disk Usage.
    --cpu|C - CPU INFORMATION.
    --mem|M - Shows the Memory usage.
    --sysbinfo|s - Shows About Device Info.
    --netstat|N - Shows About NetWork Stats.
    --speed|S - Shows the Internet Speed.
    --battery|B - Battery Stat of this device.
    --help|h - Shows this Help Info."
    PRINT $RED "***If Don't know how to do You can Directly run the Script without passing any Options***"
}

if [ $# -eq 0 ]; then
       command clear
    while true; do
        main
    done
fi

while [[ "$#" -gt 0 ]]; do
    case $1 in
        os|--os) OS;;
        D|--disk) disk;;
        C|--cpu) cpu;;
        M|--mem) memusage;;
        s|--sysbinfo) sysbaseinfo;;
        N|--netstat) netstats;;
        S|--speed) ispeed;;
        B|--battery) battery;;
        h|--help) _help ;;
        *) PRINT $BOLD $YELLOW "Unknown Option: $1";
            _help
            exit 1;;
    esac
    shift
done
