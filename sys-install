#!/data/data/com.termux/files/usr/bin/bash

# Author: Abdul Jaber(Aj-Seven)
# Github: @Aj-Seven
# Reddit: @A_J07

red='\033[1;91m'
green='\033[1;92m'
off='\033[0;0m'
cyan='\033[1;96m'
yellow='\033[1;33m'
white='\033[1;97m'

clear
echo -e "$yellow Name:$off$white sysinfo installer$off"
echo -e "$yellow Version:$off$white V2.0$off"
echo -e "$white Installing Required Dependencies. Please wait... :) $off"
echo -e "$cyan Installation Depends on internet speed$off"

# Function to install package and show message
install_package() {
    local package_name="$1"
    if ! command -v "$package_name" >/dev/null 2>&1; then
        echo -e "$cyan (Installing $package_name...) $off"
        if pkg install -y "$package_name" >/dev/null 2>&1; then
            echo -e "$green Installed $package_name successfully $off"
        else
            echo -e "$red Failed to install $package_name $off"
            exit 1
        fi
    else
        echo -e "$green $package_name is already installed $off"
    fi
}

# Function to check if tput exists under ncurses-utils package
check_without_version() {
    if [[ (-f $PREFIX/bin/termux-battery-status) && (-f $PREFIX/bin/tput) ]]; then
        echo -e "$green termux-api is already installed$off"
        echo -e "$green tput is already installed$off"
    else
        echo -e "$yellow Installing termux-api...$off"
        if pkg install -y termux-api >/dev/null 2>&1; then
            echo -e "$green Installed termux-api successfully$off"
        else
            echo -e "$red Failed to install termux-api$off"
            exit 1
        fi
        echo -e "$yellow Installing tput...$off"
        if pkg install -y ncurses-utils >/dev/null 2>&1; then
            echo -e "$green Installed tput successfully$off"
        else
            echo -e "$red Failed to install tput$off"
            exit 1
        fi
    fi
}

install_script() {
    REPO_URL="https://github.com/Aj-Seven/Android-Sysinfo"
    REPO_DIR="$PREFIX/share/Android-Sysinfo"
    SCRIPT_NAME="sysinfo"
    BIN_DIR="$PREFIX/bin"
    SCRIPT_PATH="$BIN_DIR/$SCRIPT_NAME"

    echo -e "$red Deleting files from previous installation... $off"
    rm -rf $SCRIPT_PATH $REPO_DIR >/dev/null 2>&1;

    # Clone the repository directory
    echo -e "$cyan Cloning repository directory... $off"
    if git clone "$REPO_URL" "$REPO_DIR" >/dev/null 2>&1; then
        echo -e "$green Repository directory cloned Successfully... $off"
        # Check if the script file exists in the repository directory
        if [ -f "$REPO_DIR/$SCRIPT_NAME" ]; then
            # Create a symbolic link to the script in the bin directory
            ln -s "$REPO_DIR/$SCRIPT_NAME" "$SCRIPT_PATH"
            if [ -L "$SCRIPT_PATH" ]; then
                echo -e "$green Script linked and Installed Successfully. Run it by sysinfo $off"
            else
                echo -e "$red Failed to link script $off"
                exit 1
            fi
        else
            echo -e "$red Script not Installed :( $off"
            exit 1
        fi
    else
        echo -e "$red Failed to clone repository directory $off"
        exit 1
    fi
}

install_pkg() {
    echo -e "$yellow Performing package update...$off"
    if pkg update -y >/dev/null 2>&1; then
        echo -e "$green Package update completed successfully$off"
    else
        echo -e "$red Failed to update packages$off"
        exit 1
    fi

    check_without_version
    install_package curl
    install_package git
    install_package duf
    install_package figlet
    install_package bc
    install_package jq
    install_package nmap
    install_package speedtest-go
}

# Set the default PREFIX if not provided
if [ -z "$PREFIX" ]; then
    PREFIX="/data/data/com.termux/files/usr/"
fi

# Install packages
if ! install_pkg; then
    echo -e "$red Installation of packages failed. Exiting...$off"
    exit 1
fi
